#!/usr/bin/env python2
import optparse
import sys
import string

parser = optparse.OptionParser()
parser.add_option('-l', '--level', default=2, type='int')
parser.add_option('-t', '--type', default='rst')
parser.add_option('-c', '--comment', default='#')
(options, args) = parser.parse_args()

# -----------------------------------------------------------------------
#
#   Add a nice Header block to your text.
#
# -----------------------------------------------------------------------

comment_names = {
    'vimrc':'"',
}

if options.type == 'vim':
    options.comment = '"'

if options.comment == 'vim':
  options.comment = '"'

templates = {
  'text/plain-1':"""$comment $line 
$comment
$comment   $text 
$comment
$comment $line""",
'text/plain-2':"""$comment    $text
$comment $line""", 
"markdown-1":'''$text
$double_line''',
"markdown-2":'''$text
$line''',
"markdown-3":'''$comment$comment$comment $text''',
"rst-1":'''$text
$double_line''',
"rst-2":'''$text
$line''',
"rst-3":'''$text
$tilda_line''',
"vim-1":'''$comment $line
$comment
$comment   $text
$comment
$comment $line''',
"vim-2":'''$comment $double_line
$comment $text
$comment $double_line''',
"vim-3":'''$comment $text
$comment $line''',
}

if __name__ == '__main__':
  input_lines = sys.stdin.readlines()
  longest_line = len(max(input_lines, key=len))
  text = '\n'.join(input_lines)
  text = text.rstrip('\n')
  text = text.lstrip(options.comment)
  data = {
    'comment':options.comment,
    'text':text,
    'line': \
    '-'*longest_line, 
    'double_line': \
    '='*longest_line,
    'tilda_line': \
    '~'*longest_line,
  }
  # text += ' '.join(args)
  template_selected = '%s-%d' % (options.type, options.level)
  if options.type == 'confluence':
     print """h%d. %s""" % (options.level , text)
  else:
    print string.Template(templates[template_selected]).substitute(data)
